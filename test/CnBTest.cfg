process CnBAnalyzer = {
    service = DQMStore{}

    service = MessageLoggger 
    {
	untracked vstring destinations   = { "debugmessages" }
	untracked vstring categories     = { "*" }
	untracked vstring debugModules   = { "*" }
	untracked PSet debugmessages.txt = { untracked string threshold = "DEBUG" }
    }
    
    #rib run 25461 from castor using event streamer to read raw data file
    source = NewEventStreamFileReader {
      untracked vstring fileNames = {
        '/store/data/DaqTest/A/000/025/461/DaqTest.00025461.0001.A.storageManager.0.0000.dat'
      }
    }
    
    #tif run 10238 from castor using EDM files
    #source = PoolSource
    #{
    #  untracked vstring fileNames = {
    #    "file:/exports/xdaq/CMSSW/Development/Milan/Data_Sets/cosmics/10238/10238_0.0.root", 
    #    "file:/exports/xdaq/CMSSW/Development/Milan/Data_Sets/cosmics/10238/10238_0.1.root", 
    #    "file:/exports/xdaq/CMSSW/Development/Milan/Data_Sets/cosmics/10238/10238_0.2.root" 
    #  }
    #}
    
    untracked PSet maxEvents = { untracked int32 input = 10 }
    module CnBTest = CnBAnalyzer
    {         
	untracked int32 swapOn = 1 //non zero value does the DAQ header offset, etc.
	untracked int32 dump = 1  //do you want a hex dump of the buffer you are reading looking at ?
	untracked int32 wordNumber = 20 //how many 32(64) bit words do you want ?
	untracked int32 percent = 1 //dow you want data displayed as a % error ?
	untracked int32 N = 10 //if the above is true, then "N" events before you update % error hitograms
	untracked int32 garb= 0 //garbles fe addressing output of real files for testing
	untracked int32 runNumber = 10238
	untracked bool UseCabling = 0  // 1 to use the cabling map and 0 to try to reconstruct from fedEvent
	untracked string rootFile = "FED_DQM_Data.root"
    }    
    path p = { CnBTest }
}
